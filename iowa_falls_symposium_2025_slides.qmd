---
title: "On Not Falling Short"
subtitle: "Injury Epidemiology of Falls in Iowa"
author: "Nicolas Foss, Ed.D., MS"
date: "2025-09-26" # adjust to actual date
format: 
  letterbox-revealjs:
    theme: custom.scss
    footer: "Iowa Falls Symposium 2025"
    logo: HHS_PH_horiz_color_print.jpg
    transition: slide
    menu: true
    slide-number: false
    self-contained: true
    toc: false
    code-overflow: wrap
    notes: true
    title-slide-attributes:
      class: title-slide
      data-background-color: "#03617A" # your primary blue
      data-background-size: cover
      data-background-position: center
execute: 
  echo: true
  warning: false
  message: false
---

<!-- ```{r setup, echo=FALSE}
# clinical data

# trauma environment variables ----
trauma_data_path_2020 <- Sys.getenv("trauma_data_2020")
trauma_data_path_2021 <- Sys.getenv("trauma_data_2021")
trauma_data_path_2022 <- Sys.getenv("trauma_data_2022")
trauma_data_path_2023 <- Sys.getenv("trauma_data_2023")
trauma_data_path_2024 <- Sys.getenv("trauma_data_2024")

# files for classification environment variables ----
mech_injury_path <- Sys.getenv("mech_injury_map")
injury_matrix_path <- Sys.getenv("injury_matrix")
iowa_counties_districts_path <- Sys.getenv("iowa_counties_districts")
hospital_data_path <- Sys.getenv("hospital_data_folder")


###_____________________________________________________________________________
# Load the files used to categorize mechanism and nature of injury ----
# based on the ICD-10 injury code
# NOTICE THAT IN ORDER TO GET THE SAME COUNTS AS IN TABLEAU WITH REGARD TO THE
# CAUSE OF INJURY / NATURE OF INJURY / body region (lvl1 and lvl2) you must run
# RUN distinct(Unique_Incident_ID, [coi_ar, cc2, body region], .keep_all = TRUE)
# and then your count() function or else you will not get the same counts in R.
# Tableau does a better job of automating the grouping via AI, and in R you have
# to do that manually.
###_____________________________________________________________________________

# mechanism of injury mapping ----
mechanism_injury_mapping <- readr::read_csv(
  file = mech_injury_path
)

# select variables of interest for mappings
mechanism_injury_mapping <- mechanism_injury_mapping |>
  dplyr::select(
    UPPER_CODE,
    INTENTIONALITY,
    CUSTOM_CATEGORY2,
    CAUSE_OF_INJURY_AR
  )

# nature of injury mapping ----
nature_injury_mapping <- readxl::read_excel(path = injury_matrix_path)

# select variables of interest for mappings
nature_injury_mapping <- nature_injury_mapping |>
  dplyr::select(
    ICD_10_CODE_TRIM,
    NATURE_OF_INJURY_DESCRIPTOR,
    BODY_REGION_CATEGORY_LEVEL_1,
    BODY_REGION_CATEGORY_LEVEL_2
  )

# classify counties in the data ----
location_data <- readxl::read_excel(path = iowa_counties_districts_path)

# select variables of interest for Iowa county classification
location_data <- location_data |>
  dplyr::select(County, Designation, Urbanicity)

# classify IPOP data using hospital information ----
hospital_data <- readxl::read_excel(path = hospital_data_path) |>
  janitor::clean_names(case = "screaming_snake")

### trauma data ----
trauma_data_2020 <- readr::read_csv(file = trauma_data_path_2020)
trauma_data_2021 <- readr::read_csv(file = trauma_data_path_2021)
trauma_data_2022 <- readr::read_csv(file = trauma_data_path_2022)
trauma_data_2023 <- readr::read_csv(file = trauma_data_path_2023)
trauma_data_2024 <- readr::read_csv(file = trauma_data_path_2024)

# union the trauma data
trauma_data <- dplyr::bind_rows(
  trauma_data_2020 |>
    dplyr::mutate(dplyr::across(
      .cols = tidyselect::matches("_zip$"),
      ~ as.character(.)
    )),
  trauma_data_2021 |>
    dplyr::mutate(dplyr::across(
      .cols = tidyselect::matches("_zip$"),
      ~ as.character(.)
    )),
  trauma_data_2022 |>
    dplyr::mutate(dplyr::across(
      .cols = tidyselect::matches("_zip$"),
      ~ as.character(.)
    )),
  trauma_data_2023 |>
    dplyr::mutate(dplyr::across(
      .cols = tidyselect::matches("_zip$"),
      ~ as.character(.)
    )),
  trauma_data_2024 |>
    dplyr::mutate(dplyr::across(
      .cols = tidyselect::matches("_zip$"),
      ~ as.character(.)
    ))
)

# deal with missing values in cause of injury categories
trauma_data_clean <- trauma_data |>
  dplyr::mutate(
    Age_Group = dplyr::case_when(
      Patient_Age_Years < 5 ~ "0-4",
      Patient_Age_Years >= 5 & Patient_Age_Years < 10 ~ "5-9",
      Patient_Age_Years >= 10 & Patient_Age_Years < 15 ~ "10-14",
      Patient_Age_Years >= 15 & Patient_Age_Years < 20 ~ "15-19",
      Patient_Age_Years >= 20 & Patient_Age_Years < 25 ~ "20-24",
      Patient_Age_Years >= 25 & Patient_Age_Years < 30 ~ "25-29",
      Patient_Age_Years >= 30 & Patient_Age_Years < 35 ~ "30-34",
      Patient_Age_Years >= 35 & Patient_Age_Years < 40 ~ "35-39",
      Patient_Age_Years >= 40 & Patient_Age_Years < 45 ~ "40-44",
      Patient_Age_Years >= 45 & Patient_Age_Years < 50 ~ "45-49",
      Patient_Age_Years >= 50 & Patient_Age_Years < 55 ~ "50-54",
      Patient_Age_Years >= 55 & Patient_Age_Years < 60 ~ "55-59",
      Patient_Age_Years >= 60 & Patient_Age_Years < 65 ~ "60-64",
      Patient_Age_Years >= 65 & Patient_Age_Years < 70 ~ "65-69",
      Patient_Age_Years >= 70 & Patient_Age_Years < 75 ~ "70-74",
      Patient_Age_Years >= 75 & Patient_Age_Years < 80 ~ "75-79",
      Patient_Age_Years >= 80 & Patient_Age_Years < 85 ~ "80-84",
      Patient_Age_Years >= 85 ~ "85+",
      TRUE ~ "Missing",
      .default = "Missing"
    ),
    Age_Group = factor(
      Age_Group,
      levels = c(
        "0-4",
        "5-9",
        "10-14",
        "15-19",
        "20-24",
        "25-29",
        "30-34",
        "35-39",
        "40-44",
        "45-49",
        "50-54",
        "55-59",
        "60-64",
        "65-69",
        "70-74",
        "75-79",
        "80-84",
        "85+",
        "Missing"
      )
    ),
    .after = Age_Range
  ) |>
  dplyr::mutate(
    Injury_County = stringr::str_to_title(Injury_County),
    Injury_County = dplyr::if_else(
      grepl(pattern = "o'b", x = Injury_County, ignore.case = TRUE),
      "O'Brien",
      Injury_County
    ),
    NATURE_OF_INJURY_DESCRIPTOR_1 = dplyr::if_else(
      is.na(NATURE_OF_INJURY_DESCRIPTOR_1),
      NATURE_OF_INJURY_DESCRIPTOR_2,
      NATURE_OF_INJURY_DESCRIPTOR_1
    ),
    BODY_REGION_CATEGORY_LEVEL_1_1 = dplyr::if_else(
      is.na(BODY_REGION_CATEGORY_LEVEL_1_1),
      BODY_REGION_CATEGORY_LEVEL_1_2,
      BODY_REGION_CATEGORY_LEVEL_1_1
    ),
    BODY_REGION_CATEGORY_LEVEL_2_1 = dplyr::if_else(
      is.na(BODY_REGION_CATEGORY_LEVEL_2_1),
      BODY_REGION_CATEGORY_LEVEL_2_2,
      BODY_REGION_CATEGORY_LEVEL_2_1
    ),
    BODY_REGION_CATEGORY_LEVEL_3_1 = dplyr::if_else(
      is.na(BODY_REGION_CATEGORY_LEVEL_3_1),
      BODY_REGION_CATEGORY_LEVEL_3_2,
      BODY_REGION_CATEGORY_LEVEL_3_1
    ),
    INTENTIONALITY_1 = dplyr::if_else(
      is.na(INTENTIONALITY_1),
      INTENTIONALITY_2,
      INTENTIONALITY_1
    ),
    MECHANISM_1 = dplyr::if_else(is.na(MECHANISM_1), MECHANISM_2, MECHANISM_1),
    LEVEL_FALL1_1 = dplyr::if_else(
      is.na(LEVEL_FALL1_1),
      LEVEL_FALL1_2,
      LEVEL_FALL1_1
    ),
    CAUSE_OF_INJURY_AR_1 = dplyr::if_else(
      is.na(CAUSE_OF_INJURY_AR_1),
      CAUSE_OF_INJURY_AR_2,
      CAUSE_OF_INJURY_AR_1
    )
  ) |>
  dplyr::left_join(location_data, by = c("Patient_County" = "County")) |>
  dplyr::rename(
    Designation_Patient = Designation,
    Urbanicity_Patient = Urbanicity
  ) |>
  dplyr::relocate(
    tidyselect::all_of(c("Designation_Patient", "Urbanicity_Patient")),
    .after = Patient_County
  ) |>
  dplyr::left_join(location_data, by = c("Injury_County" = "County")) |>
  dplyr::rename(
    Designation_Injury = Designation,
    Urbanicity_Injury = Urbanicity
  ) |>
  dplyr::relocate(
    tidyselect::all_of(c("Designation_Injury", "Urbanicity_Injury")),
    .after = Injury_County
  ) |>
  dplyr::left_join(location_data, by = "County") |>
  dplyr::relocate(
    tidyselect::all_of(c("Designation", "Urbanicity")),
    .after = County
  )

# get the trauma data for the year of interest
trauma_2024 <- trauma_data_clean |> dplyr::filter(Year == 2024)
``` -->

# Objectives
Today, we will learn

::: {.incremental}

- overall statistics on falls
- survival among patients who fell
- the distribution of falls across: 
  - demographic groups
  - geographic areas

:::

# About the data
Source: Iowa Trauma Registry from 2020-2024.

::: {.incremental}
- Not all injured patients are entered in the trauma registry. Go to the Bureau of Emergency Medical and Trauma Services website and look for the Trauma Data Registry page to find the inclusion criteria.
- Generally, the patients in the trauma registry are of higher acuity.
- The Iowa Trauma Registry is not the only source of data related to injured patients in Iowa. The Iowa Hospital Association's Inpatient Outpatient dataset is able to document all injuries including minor injuries that are typically not included in a state government's modern trauma registry.
:::

